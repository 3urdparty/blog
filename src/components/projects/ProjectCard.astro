---
import type { CollectionEntry } from 'astro:content'
import type { HTMLTag, Polymorphic } from 'astro/types'
import { Image } from 'astro:assets'
import type { ImageMetadata } from 'astro'
import { cn } from '@/utils'

import FormattedDate from '../FormattedDate.astro'

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
	project: CollectionEntry<'project'>
	withDesc?: boolean
}

const { as: Tag = 'div', project, withDesc = false, 
	class: className
 } = Astro.props

const {
data: { description, ogImage, publishDate, title, updatedDate, coverImage, iconImage,subtitle },
	slug
} = project

//const socialImage = ogImage ?? `/og-image/${slug}.png`
const projectDate = updatedDate?.toISOString() ?? publishDate.toISOString()
---

<Tag
	class={cn(
		className,
		'flex flex-col gap-y-3 rounded-2xl border border-border bg-primary-foreground relative',
		'transition-all hover:border-foreground/25 hover:shadow-sm'
	)}
	href=`${import.meta.env.BASE_URL}`
>
	<FormattedDate class='min-w-[120px]' date={projectDate} />
	<Image
		src={coverImage.src}
		alt={coverImage.alt}
		class='h-48 w-full rounded-2xl rounded-bl-none rounded-br-none object-cover'
		loading='eager'
	/>
	<div></div>
	<Image
		src={iconImage.src}
		alt={iconImage.alt}
		class='absolute bottom-0 left-4 mb-20 h-10 w-10 rounded-full border border-slate-700 bg-slate-800 object-contain p-1'
		loading='eager'
	/>
	<div class='flex w-80 flex-col gap-y-0.5 px-5 py-4'>
		<a href=`${import.meta.env.BASE_URL}/projects/${slug}` class='text-lg font-medium'
			>{title}</a
		>
		<h2 class=''>{subtitle}</h2>
	</div>

	<slot />
</Tag>
